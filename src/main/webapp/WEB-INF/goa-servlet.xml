<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!--关于pool的设置值要大于1，不然异步没有效果-->
		<property name="corePoolSize" value="20"/>
		<property name="maxPoolSize" value="50"/>
		<property name="queueCapacity" value="1000"/>
		<property name="keepAliveSeconds" value="60"/>
	</bean>

	<!-- executor -->
	<task:executor id="executor" pool-size="10"/>

	<!-- 任务调度器-->
	<task:scheduler id="scheduler" pool-size="10"/>

	<task:annotation-driven />


	<context:component-scan base-package="com.jc.**.web,com.jc.**.task"></context:component-scan>
	<mvc:annotation-driven/>
	<mvc:resources location="/css/" mapping="/css/**"/>
	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/mockequi/" mapping="/mockequi/**"/>
	<mvc:resources location="/TDTLib/" mapping="/TDTLib/**"/>
	<mvc:resources location="/upload/" mapping="/upload/**"/>
	<mvc:resources location="/images/" mapping="/images/**"/>
	<mvc:resources location="/fonts/" mapping="/fonts/**"/>
	<mvc:resources location="/video/" mapping="/video/**"/>
	<mvc:resources location="/ueditor/" mapping="/plugin/**"/>
	<mvc:resources location="/" mapping="/favicon.ico"/>
	<mvc:resources location="/install/" mapping="/install/**"/>
	<!-- <mvc:resources location="/install/setup/" mapping="/install/setup/WebOffice.cab"/>
	<mvc:resources location="/install/setup/" mapping="/install/setup/DESSeal.dll"/>
	<mvc:resources location="/install/setup/" mapping="/install/setup/HWPostil.ocx"/>
	<mvc:resources location="/install/setup/" mapping="/install/setup/WebSign.dll"/>
	<mvc:resources location="/install/setup/" mapping="/install/setup/WebOffice.cab"/> -->
	<mvc:resources location="/help/" mapping="/help/**"/>

	<mvc:resources mapping="doc.html" location="classpath:/META-INF/resources/"/>
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

	<mvc:resources location="/process-editor/" mapping="/process-editor/**" />
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		  p:viewClass="org.springframework.web.servlet.view.JstlView"
		  p:prefix="/WEB-INF/web/"
		  p:suffix=".jsp" />

	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>524288000</value>
		</property>
		<property name="resolveLazily" value="true"/>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<!-- 支持Shiro对Controller的方法级AOP安全控制 begin-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
	<!-- 支持Shiro对Controller的方法级AOP安全控制 end-->

	<!-- 配置 shiro无权限的异常-->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">error/unauthorized</prop>
			</props>
		</property>
	</bean>
	<!-- 配置 shiro无权限的异常 end-->
	<bean id="swaggerconf" class="com.jc.system.swagger.SwaggerConf" />
</beans>